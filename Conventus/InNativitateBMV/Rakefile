RUBY_COMMAND = 'ruby' # was: 'ruby1.9.1'

TMP_DIR = "temporalia"

EDITIO_ROOTDIR = "../.."
TOOLS_DIR = EDITIO_ROOTDIR + "/instrumenta"
PSALMS_DIR = EDITIO_ROOTDIR + "/psalmi/amon33"
PSALMTONES_DIR = EDITIO_ROOTDIR + "/tonipsalmorum/arom12"
CZECH_PSALMS_DIR = EDITIO_ROOTDIR + "/bohemice_psalmi"
COMMON_CHANTS_DIR = EDITIO_ROOTDIR + "/cantuscommunes"

PSALM_PREPROCESSOR = TOOLS_DIR + "/psalmpreprocessor.rb"


def genpsalm_universal(zalm, options="", output_dir, input_dir)
  wd = Dir.pwd
  syrovy = input_dir+"/"+zalm
  peceny = output_dir+zalm.gsub(/\.pslm/, '')+'.tex'
  file peceny => [syrovy, PSALM_PREPROCESSOR] do
    chdir output_dir
    sh "#{RUBY_COMMAND} ../#{PSALM_PREPROCESSOR} #{options} ../#{syrovy}"
    chdir wd
  end
  return peceny
end

def genpsalm(zalm, options="", output_dir=TMP_DIR, input_dir=PSALMS_DIR)
  genpsalm_universal(zalm, options, output_dir, input_dir)
end

def genczechpsalm(zalm, options="", output_dir=TMP_DIR, input_dir=CZECH_PSALMS_DIR+"/Hejcl1922/")
  of = zalm.gsub(".pslm", "-boh.tex")
  ofop = "--output "+of+" "
  wd = Dir.pwd
  syrovy = input_dir+zalm
  of = zalm.gsub(".pslm", "-boh.tex")
  ofop = "--output "+of+" "
  file output_dir+of => [syrovy, PSALM_PREPROCESSOR] do
    chdir output_dir
    sh "#{RUBY_COMMAND} ../#{PSALM_PREPROCESSOR} #{ofop} #{options} ../#{syrovy}"
    chdir wd
  end
  return output_dir+of
end

def genzalmsuff(zalm, options="", suff="aaa", adresar=TMP_DIR)
  wd = Dir.pwd
  syrovy = PSALMS_DIR+"/"+zalm
  peceny = adresar+"/"+zalm.gsub(/\.pslm/, '')+'-'+suff+'.tex'
  file peceny => [syrovy, PSALM_PREPROCESSOR] do
    chdir adresar
    sh "#{RUBY_COMMAND} ../#{PSALM_PREPROCESSOR} -o #{File.basename(peceny)} #{options} ../#{syrovy}"
    chdir wd
  end
  return peceny
end

def gregorio(srcf)
  f2 = srcf.gsub(".gabc", ".tex")
  file f2 => [srcf] do
    sh "gregorio #{srcf}"
  end
  return f2
end

def geninitium(psalm, tone, directory=TMP_DIR+"/")
  ntone = tone
  if i = ntone.index('.') then
    ntone = ntone[0..i-1].downcase+'-'+ntone[i+1..-1]
  end
  patternfile = PSALMTONES_DIR+"/"+ntone+'-auto.gabc'

  psalmfile = PSALMS_DIR + '/' + (psalm.is_a?(Fixnum) ? "ps#{psalm}" : psalm) + '.pslm'
  
  i = File.basename(patternfile).index('.')
  output_ending = '-initium-'+File.basename(patternfile)[0..i-1]+'.gabc'
  outputfile = File.basename(psalmfile).gsub(/\.pslm$/, output_ending)

  initium_tool = TOOLS_DIR+'/initiumpsalmi.rb'

  file directory+outputfile => [psalmfile, patternfile, initium_tool] do
    wd = Dir.pwd
    chdir directory
    sh "ruby ../#{initium_tool} ../#{psalmfile} ../#{patternfile}"
    chdir wd
  end

  return gregorio(directory+outputfile)
end

TONI_PSALMORUM = {
  'I.D' => [[2,0], [1,2]],
  'I.D2' => [[2,0], [1,2]],
  'Isoll.D2' => [[1,3], [1,2]],
  'II.D' => [[1,0], [1,1]],
  'III.a' => [[2,0], [1,1]],
  'IV.E' => [[1,2], [1,3]],
  'VI.F' => [[1,1], [1,2]],
  'VII.a' => [[2,0], [2,0]],
  'VII.c' => [[2,0], [2,0]],
  'VIII.G' => [[1,0], [1,2]],
  'VIIIsoll.G' => [[1,3], [1,2]],
  'per' => [[1,3], [1,1]],
  'dir' => [[1,2], [1,0]]
}

gloriapatri = File.readlines(PSALMS_DIR + '/gloriapatri.pslm').join ""

nativitas_psalmi = []

options_common = "--accents-style bold --append \"#{gloriapatri}\" --skip-verses 1 "
options_magnificat = options_common.gsub "--skip-verses 1", "--skip-verses 2"

options_translation = "--accents 0:0 --title-pattern \" \" --no-paragraph "

def options_accents(psalmtone)
  accents = "#{TONI_PSALMORUM[psalmtone][0][0]}:#{TONI_PSALMORUM[psalmtone][1][0]}"
  preps = "#{TONI_PSALMORUM[psalmtone][0][1]}:#{TONI_PSALMORUM[psalmtone][1][1]}"

  return "--accents #{accents} --preparatory-syllables #{preps}"
end

nativitas_cantus = []

# zalmy (akcenty podle napevu)
{62 => 'VI.F',
  66 => 'dir',
  92 => 'VIII.G',
  99 => 'VII.c',
  109 => 'VIII.G',
  112 => 'VII.c',
  121 => 'VI.F',
  126 => 'VIII.G',
  # 147 => 'VII.c',
  150 => 'VII.c'}.each_pair do |n,t|
  
  nativitas_psalmi << genpsalm("ps#{n}.pslm", options_common+options_accents(t))
  nativitas_psalmi << genczechpsalm("ps#{n}.pslm", options_translation)
  nativitas_cantus << geninitium(n, t)
end

# zalmy bez Gloria Patri
[148, 149].each do |n|
  nativitas_psalmi << genpsalm("ps#{n}.pslm", "--accents-style bold --skip-verses 1 "+options_accents('VII.c'))
  nativitas_psalmi << genczechpsalm("ps#{n}.pslm", options_translation)
  nativitas_cantus << geninitium(n, 'VII.c')
end

nativitas_psalmi << genpsalm('dan3.pslm', "--accents-style bold --skip-verses 1 "+options_accents('VIII.G'))
nativitas_cantus << geninitium('dan3', 'VIII.G')
nativitas_psalmi << genczechpsalm("dan3.pslm", options_translation, TMP_DIR, CZECH_PSALMS_DIR+"/Pavlik/")

# Benedictus a Magnificat
nativitas_psalmi << genzalmsuff("magnificat.pslm", options_magnificat+options_accents('Isoll.D2'), 'iD2')
nativitas_psalmi << genzalmsuff("benedictus.pslm", options_common+options_accents('VIIIsoll.G'), 'viiiG')

nativitas_psalmi << genczechpsalm("magnificat.pslm", options_translation, TMP_DIR, CZECH_PSALMS_DIR+"/DMC199x/")
nativitas_psalmi << genczechpsalm("benedictus.pslm", options_translation, TMP_DIR, CZECH_PSALMS_DIR+"/DMC199x/")

# noty
["cantus/amon33/*.gabc", 
 "cantus/triplex76/*.gabc", 
 COMMON_CHANTS_DIR+"/kyriale76/[^0]*.gabc", 
 COMMON_CHANTS_DIR+"/amon33/*.gabc"].each do |d|
  Dir[d].each do |s|
    nativitas_cantus << gregorio(s)
  end
end

# initium k Benedictus:
file TMP_DIR+"/benedictus-initium-viiisoll-G-auto.gabc" => [PSALMS_DIR+"/benedictus.pslm", PSALMTONES_DIR+"/viiisoll-G-auto.gabc", TOOLS_DIR+'/initiumpsalmi.rb'] do |t|
  psalmfile = t.prerequisites[0]
  patternfile = t.prerequisites[1]
  wd = Dir.pwd
  chdir TMP_DIR
  sh "ruby ../#{TOOLS_DIR}/initiumpsalmi.rb ../#{psalmfile} ../#{patternfile}"
  chdir wd
end
nativitas_cantus << gregorio(TMP_DIR+"/benedictus-initium-viiisoll-G-auto.gabc")

nativitas_hymni = ['hym-AveMarisStella-text.tex', 
                   'hym-AveMarisStella-bohtext.tex',
                   'hym-OGloriosaDomina-text.tex'].collect {|h| 
  'cantus/amon33/'+h
}

file "innativitatebmv.pdf" => ['innativitatebmv.tex', 'translationes_cs.tex']+nativitas_cantus+nativitas_psalmi+nativitas_hymni do |t|
  # sh "xelatex #{t.prerequisites.first}"
  2.times { sh "lualatex -interaction=nonstopmode #{t.prerequisites.first}" }
end

file "supplementum.pdf" => ['supplementum.tex']+nativitas_cantus do |t|
  sh "lualatex -interaction=nonstopmode #{t.prerequisites.first}"
end

file "innativitatebmv-neumae.pdf" => ["innativitatebmv.pdf", "paginaeneumatae/pg30-33-rotated.pdf"] do |t|
  # make a copy of the main output file with pages 30-33 replaced
  # by their scans containing neumes
  sh "pdfjoin --outfile #{t.name} #{t.prerequisites.first} '1-29' #{t.prerequisites[1]} '-' #{t.prerequisites.first} '34-'"
end

task :nativitas => ["innativitatebmv.pdf"]
desc "produce the chant book"

task :nativitas_neumae => ["innativitatebmv-neumae.pdf"]
desc "produce the chant book with scanned hand-written neumes for the Mass"

task :supplementum => ["supplementum.pdf"]
desc "produce a sheet with notated chapter and prayer"

task :default => [:nativitas]
